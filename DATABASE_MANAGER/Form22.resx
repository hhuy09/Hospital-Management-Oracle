<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zOz//22Vd+73hnUAAAAASUVORK5CYII=
</value>
  </data>
</root>